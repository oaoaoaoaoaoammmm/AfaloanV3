services:

  afa-postgres:
    container_name: afa-postgres-v3
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    volumes:
      - ./database/init_databases.sql:/docker-entrypoint-initdb.d/init_databases.sql
    profiles:
      - cloud
      - local

  afa-minio:
    container_name: afa-minio-v3
    image: bitnami/minio:2024
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: username
      MINIO_ROOT_PASSWORD: password
      MINIO_DEFAULT_BUCKETS: afa-file
    #    volumes:
    #      -
    profiles:
      - cloud
      - local

  afa-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: afa-zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  afa-kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    container_name: afa-kafka-broker-1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: afa-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://afa-kafka-broker-1:9092, PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
    depends_on:
      - afa-zookeeper

  afa-kafka-broker-2:
    image: confluentinc/cp-kafka:latest
    container_name: afa-kafka-broker-2
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: afa-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://afa-kafka-broker-2:9093, PLAINTEXT_HOST://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
    depends_on:
      - afa-zookeeper

  afa-kafka-broker-3:
    image: confluentinc/cp-kafka:latest
    container_name: afa-kafka-broker-3
    ports:
      - "9094:9094"
      - "29094:29094"
    depends_on:
      - afa-zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: afa-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://afa-kafka-broker-3:9094, PLAINTEXT_HOST://localhost:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT

  afa-discovery:
    container_name: afa-discovery-v3
    image: afa-discovery-v3
    ports:
      - "8761:8761"
    build:
      context: "afa-discovery"
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      EUREKA_CLIENT_USERNAME: eureka_client
      EUREKA_CLIENT_PASSWORD: eureka_password
      PORT: 8761
    profiles:
      - cloud

  afa-config:
    container_name: afa-config-v3
    image: afa-config-v3
    ports:
      - "8888:8888"
    build:
      context: "afa-config"
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: native
      DISCOVERY_SERVER_URL: http://eureka_client:eureka_password@afa-discovery:8761/eureka
      PORT: 8888
      # other services configs
      # gateway
      AFA_USER_NAME: afa-user
      AFA_ORDER_NAME: afa_order
      AFA_PROCESS_NAME: afa-process
      # afa-user
      AFA_USER_R2DBC_URL: r2dbc:postgresql://afa-postgres:5432/afa_user
      AFA_USER_JDBC_URL: jdbc:postgresql://afa-postgres:5432/afa_user
      AFA_USER_DB_USER: username
      AFA_USER_DB_PASSWORD: password
      SECRET: aGZiYmtiYWllYmNpZWFpZWJsZWNldWNlY2xhZWNhaWJlbGNhZWN3Q0VCV0VXSUM=
      ACCESS: 1
      REFRESH: 24
      # afa-order
      AFA_ORDER_JDBC_URL: jdbc:postgresql://afa-postgres:5432/afa_order
      AFA_ORDER_DB_USER: username
      AFA_ORDER_DB_PASSWORD: password
      # afa-process
      AFA_PROCESS_JDBC_URL: jdbc:postgresql://afa-postgres:5432/afa_process
      AFA_PROCESS_DB_USER: username
      AFA_PROCESS_DB_PASSWORD: password
      AFA_ORDER_URL: afa_order
      # afa-file
      MINIO_ENDPOINT: http://afa-minio:9000
      MINIO_ACCESS_KEY: username
      MINIO_SECRET_KEY: password
      MINIO_BUCKET: afa-file
      MINIO_REGION: us-east-1
    depends_on:
      - afa-discovery
    profiles:
      - cloud

  afa-admin:
    container_name: afa-admin-v3
    image: afa-admin-v3
    ports:
      - "8187:8187"
    build:
      context: "afa-admin"
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      DISCOVERY_SERVER_URL: http://eureka_client:eureka_password@afa-discovery:8761/eureka
      PORT: 8187
    depends_on:
      - afa-discovery
      - afa-config
    profiles:
      - cloud

  afa-gateway:
    container_name: afa-gateway-v3
    image: afa-gateway-v3
    ports:
      - "8080:8080"
    build:
      context: "afa-gateway"
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      DISCOVERY_SERVER_URL: http://eureka_client:eureka_password@afa-discovery:8761/eureka
      API_PREFIX: /api/v3
      PORT: 8080
    depends_on:
      - afa-discovery
      - afa-config
    profiles:
      - cloud

  afa-user:
    container_name: afa-user-v3
    image: afa-user-v3
    ports:
      - "8383:8383"
    build:
      context: "afa-user"
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      DISCOVERY_SERVER_URL: http://eureka_client:eureka_password@afa-discovery:8761/eureka
      PORT: 8383
    depends_on:
      - afa-postgres
      - afa-discovery
      - afa-config
      - afa-gateway
    profiles:
      - cloud

  afa-order:
    container_name: afa-order-v3
    image: afa-order-v3
    ports:
      - "8381:8381"
    build:
      context: "afa-order"
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      DISCOVERY_SERVER_URL: http://eureka_client:eureka_password@afa-discovery:8761/eureka
      PORT: 8381
    depends_on:
      - afa-postgres
      - afa-discovery
      - afa-config
      - afa-gateway
    profiles:
      - cloud

  afa-process:
    container_name: afa-process-v3
    image: afa-process-v3
    ports:
      - "8387:8387"
    build:
      context: "afa-process"
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      DISCOVERY_SERVER_URL: http://eureka_client:eureka_password@afa-discovery:8761/eureka
      PORT: 8387
    depends_on:
      - afa-postgres
      - afa-discovery
      - afa-config
      - afa-gateway
      - afa-kafka-broker-1
      - afa-kafka-broker-2
      - afa-kafka-broker-3
    profiles:
      - cloud

  afa-file:
    container_name: afa-file-v3
    image: afa-file-v3
    ports:
      - "8389:8389"
    build:
      context: "afa-file"
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      DISCOVERY_SERVER_URL: http://eureka_client:eureka_password@afa-discovery:8761/eureka
      PORT: 8389
    depends_on:
      - afa-minio
      - afa-discovery
      - afa-config
      - afa-gateway
    profiles:
      - cloud

  afa-notification:
    container_name: afa-notification-v3
    image: afa-notification-v3
    ports:
      - "8491:8491"
    build:
      context: "afa-notification"
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      DISCOVERY_SERVER_URL: http://eureka_client:eureka_password@afa-discovery:8761/eureka
      PORT: 8491
    depends_on:
      - afa-minio
      - afa-discovery
      - afa-config
      - afa-gateway
      - afa-kafka-broker-1
      - afa-kafka-broker-2
      - afa-kafka-broker-3
    profiles:
      - cloud
